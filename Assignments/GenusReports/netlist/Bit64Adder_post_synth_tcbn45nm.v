
// Generated by Cadence Genus(TM) Synthesis Solution GENUS15.23 - 15.20-s040_1
// Generated on: Aug 10 2016 20:04:14

// Verification Directory fv/Bit64Adder 

module FullAdder(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0, n_1;
  MOAI22D0BWP g33(.A1 (n_1), .A2 (n_0), .B1 (a), .B2 (b), .ZN (cout));
  MUX2ND0BWP g34(.I0 (cin), .I1 (n_1), .S (n_0), .ZN (sum));
  CKND1BWP g38(.I (cin), .ZN (n_1));
  XNR2D1BWP g2(.A1 (a), .A2 (b), .ZN (n_0));
endmodule

module FullAdder_1(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0, n_1;
  AO22D2BWP g33(.A1 (cin), .A2 (n_1), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (n_0), .A2 (n_1), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_1));
  BUFFD0BWP fopt(.I (cin), .Z (n_0));
endmodule

module FullAdder_2(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_3(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module Bit4Adder(a, b, cin, sum, cout);
  input [4:1] a, b;
  input cin;
  output [4:1] sum;
  output cout;
  wire [4:1] a, b;
  wire cin;
  wire [4:1] sum;
  wire cout;
  wire w1, w2, w3;
  FullAdder FA_0(a[1], b[1], cin, sum[1], w1);
  FullAdder_1 FA_1(a[2], b[2], w1, sum[2], w2);
  FullAdder_2 FA_2(a[3], b[3], w2, sum[3], w3);
  FullAdder_3 FA_3(a[4], b[4], w3, sum[4], cout);
endmodule

module FullAdder_4(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_5(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_6(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_7(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module Bit4Adder_1(a, b, cin, sum, cout);
  input [4:1] a, b;
  input cin;
  output [4:1] sum;
  output cout;
  wire [4:1] a, b;
  wire cin;
  wire [4:1] sum;
  wire cout;
  wire w1, w2, w3;
  FullAdder_4 FA_0(.a (a[1]), .b (b[1]), .cin (cin), .sum (sum[1]),
       .cout (w1));
  FullAdder_5 FA_1(.a (a[2]), .b (b[2]), .cin (w1), .sum (sum[2]),
       .cout (w2));
  FullAdder_6 FA_2(.a (a[3]), .b (b[3]), .cin (w2), .sum (sum[3]),
       .cout (w3));
  FullAdder_7 FA_3(.a (a[4]), .b (b[4]), .cin (w3), .sum (sum[4]),
       .cout (cout));
endmodule

module FullAdder_8(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_9(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_10(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_11(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module Bit4Adder_2(a, b, cin, sum, cout);
  input [4:1] a, b;
  input cin;
  output [4:1] sum;
  output cout;
  wire [4:1] a, b;
  wire cin;
  wire [4:1] sum;
  wire cout;
  wire w1, w2, w3;
  FullAdder_8 FA_0(.a (a[1]), .b (b[1]), .cin (cin), .sum (sum[1]),
       .cout (w1));
  FullAdder_9 FA_1(.a (a[2]), .b (b[2]), .cin (w1), .sum (sum[2]),
       .cout (w2));
  FullAdder_10 FA_2(.a (a[3]), .b (b[3]), .cin (w2), .sum (sum[3]),
       .cout (w3));
  FullAdder_11 FA_3(.a (a[4]), .b (b[4]), .cin (w3), .sum (sum[4]),
       .cout (cout));
endmodule

module FullAdder_12(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_13(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_14(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_15(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module Bit4Adder_3(a, b, cin, sum, cout);
  input [4:1] a, b;
  input cin;
  output [4:1] sum;
  output cout;
  wire [4:1] a, b;
  wire cin;
  wire [4:1] sum;
  wire cout;
  wire w1, w2, w3;
  FullAdder_12 FA_0(.a (a[1]), .b (b[1]), .cin (cin), .sum (sum[1]),
       .cout (w1));
  FullAdder_13 FA_1(.a (a[2]), .b (b[2]), .cin (w1), .sum (sum[2]),
       .cout (w2));
  FullAdder_14 FA_2(.a (a[3]), .b (b[3]), .cin (w2), .sum (sum[3]),
       .cout (w3));
  FullAdder_15 FA_3(.a (a[4]), .b (b[4]), .cin (w3), .sum (sum[4]),
       .cout (cout));
endmodule

module Bit16Adder(a, b, cin, sum, cout);
  input [16:1] a, b;
  input cin;
  output [16:1] sum;
  output cout;
  wire [16:1] a, b;
  wire cin;
  wire [16:1] sum;
  wire cout;
  wire w1, w2, w3;
  Bit4Adder B4A_0(a[4:1], b[4:1], cin, sum[4:1], w1);
  Bit4Adder_1 B4A_1(a[8:5], b[8:5], w1, sum[8:5], w2);
  Bit4Adder_2 B4A_2(a[12:9], b[12:9], w2, sum[12:9], w3);
  Bit4Adder_3 B4A_3(a[16:13], b[16:13], w3, sum[16:13], cout);
endmodule

module FullAdder_16(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_17(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_18(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_19(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module Bit4Adder_4(a, b, cin, sum, cout);
  input [4:1] a, b;
  input cin;
  output [4:1] sum;
  output cout;
  wire [4:1] a, b;
  wire cin;
  wire [4:1] sum;
  wire cout;
  wire w1, w2, w3;
  FullAdder_16 FA_0(.a (a[1]), .b (b[1]), .cin (cin), .sum (sum[1]),
       .cout (w1));
  FullAdder_17 FA_1(.a (a[2]), .b (b[2]), .cin (w1), .sum (sum[2]),
       .cout (w2));
  FullAdder_18 FA_2(.a (a[3]), .b (b[3]), .cin (w2), .sum (sum[3]),
       .cout (w3));
  FullAdder_19 FA_3(.a (a[4]), .b (b[4]), .cin (w3), .sum (sum[4]),
       .cout (cout));
endmodule

module FullAdder_20(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_21(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_22(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_23(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module Bit4Adder_5(a, b, cin, sum, cout);
  input [4:1] a, b;
  input cin;
  output [4:1] sum;
  output cout;
  wire [4:1] a, b;
  wire cin;
  wire [4:1] sum;
  wire cout;
  wire w1, w2, w3;
  FullAdder_20 FA_0(.a (a[1]), .b (b[1]), .cin (cin), .sum (sum[1]),
       .cout (w1));
  FullAdder_21 FA_1(.a (a[2]), .b (b[2]), .cin (w1), .sum (sum[2]),
       .cout (w2));
  FullAdder_22 FA_2(.a (a[3]), .b (b[3]), .cin (w2), .sum (sum[3]),
       .cout (w3));
  FullAdder_23 FA_3(.a (a[4]), .b (b[4]), .cin (w3), .sum (sum[4]),
       .cout (cout));
endmodule

module FullAdder_24(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_25(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_26(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_27(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module Bit4Adder_6(a, b, cin, sum, cout);
  input [4:1] a, b;
  input cin;
  output [4:1] sum;
  output cout;
  wire [4:1] a, b;
  wire cin;
  wire [4:1] sum;
  wire cout;
  wire w1, w2, w3;
  FullAdder_24 FA_0(.a (a[1]), .b (b[1]), .cin (cin), .sum (sum[1]),
       .cout (w1));
  FullAdder_25 FA_1(.a (a[2]), .b (b[2]), .cin (w1), .sum (sum[2]),
       .cout (w2));
  FullAdder_26 FA_2(.a (a[3]), .b (b[3]), .cin (w2), .sum (sum[3]),
       .cout (w3));
  FullAdder_27 FA_3(.a (a[4]), .b (b[4]), .cin (w3), .sum (sum[4]),
       .cout (cout));
endmodule

module FullAdder_28(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_29(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_30(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_31(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module Bit4Adder_7(a, b, cin, sum, cout);
  input [4:1] a, b;
  input cin;
  output [4:1] sum;
  output cout;
  wire [4:1] a, b;
  wire cin;
  wire [4:1] sum;
  wire cout;
  wire w1, w2, w3;
  FullAdder_28 FA_0(.a (a[1]), .b (b[1]), .cin (cin), .sum (sum[1]),
       .cout (w1));
  FullAdder_29 FA_1(.a (a[2]), .b (b[2]), .cin (w1), .sum (sum[2]),
       .cout (w2));
  FullAdder_30 FA_2(.a (a[3]), .b (b[3]), .cin (w2), .sum (sum[3]),
       .cout (w3));
  FullAdder_31 FA_3(.a (a[4]), .b (b[4]), .cin (w3), .sum (sum[4]),
       .cout (cout));
endmodule

module Bit16Adder_1(a, b, cin, sum, cout);
  input [16:1] a, b;
  input cin;
  output [16:1] sum;
  output cout;
  wire [16:1] a, b;
  wire cin;
  wire [16:1] sum;
  wire cout;
  wire w1, w2, w3;
  Bit4Adder_4 B4A_0(.a (a[4:1]), .b (b[4:1]), .cin (cin), .sum
       (sum[4:1]), .cout (w1));
  Bit4Adder_5 B4A_1(.a (a[8:5]), .b (b[8:5]), .cin (w1), .sum
       (sum[8:5]), .cout (w2));
  Bit4Adder_6 B4A_2(.a (a[12:9]), .b (b[12:9]), .cin (w2), .sum
       (sum[12:9]), .cout (w3));
  Bit4Adder_7 B4A_3(.a (a[16:13]), .b (b[16:13]), .cin (w3), .sum
       (sum[16:13]), .cout (cout));
endmodule

module FullAdder_32(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_33(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_34(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_35(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module Bit4Adder_8(a, b, cin, sum, cout);
  input [4:1] a, b;
  input cin;
  output [4:1] sum;
  output cout;
  wire [4:1] a, b;
  wire cin;
  wire [4:1] sum;
  wire cout;
  wire w1, w2, w3;
  FullAdder_32 FA_0(.a (a[1]), .b (b[1]), .cin (cin), .sum (sum[1]),
       .cout (w1));
  FullAdder_33 FA_1(.a (a[2]), .b (b[2]), .cin (w1), .sum (sum[2]),
       .cout (w2));
  FullAdder_34 FA_2(.a (a[3]), .b (b[3]), .cin (w2), .sum (sum[3]),
       .cout (w3));
  FullAdder_35 FA_3(.a (a[4]), .b (b[4]), .cin (w3), .sum (sum[4]),
       .cout (cout));
endmodule

module FullAdder_36(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_37(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_38(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_39(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module Bit4Adder_9(a, b, cin, sum, cout);
  input [4:1] a, b;
  input cin;
  output [4:1] sum;
  output cout;
  wire [4:1] a, b;
  wire cin;
  wire [4:1] sum;
  wire cout;
  wire w1, w2, w3;
  FullAdder_36 FA_0(.a (a[1]), .b (b[1]), .cin (cin), .sum (sum[1]),
       .cout (w1));
  FullAdder_37 FA_1(.a (a[2]), .b (b[2]), .cin (w1), .sum (sum[2]),
       .cout (w2));
  FullAdder_38 FA_2(.a (a[3]), .b (b[3]), .cin (w2), .sum (sum[3]),
       .cout (w3));
  FullAdder_39 FA_3(.a (a[4]), .b (b[4]), .cin (w3), .sum (sum[4]),
       .cout (cout));
endmodule

module FullAdder_40(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_41(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_42(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_43(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module Bit4Adder_10(a, b, cin, sum, cout);
  input [4:1] a, b;
  input cin;
  output [4:1] sum;
  output cout;
  wire [4:1] a, b;
  wire cin;
  wire [4:1] sum;
  wire cout;
  wire w1, w2, w3;
  FullAdder_40 FA_0(.a (a[1]), .b (b[1]), .cin (cin), .sum (sum[1]),
       .cout (w1));
  FullAdder_41 FA_1(.a (a[2]), .b (b[2]), .cin (w1), .sum (sum[2]),
       .cout (w2));
  FullAdder_42 FA_2(.a (a[3]), .b (b[3]), .cin (w2), .sum (sum[3]),
       .cout (w3));
  FullAdder_43 FA_3(.a (a[4]), .b (b[4]), .cin (w3), .sum (sum[4]),
       .cout (cout));
endmodule

module FullAdder_44(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_45(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_46(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_47(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module Bit4Adder_11(a, b, cin, sum, cout);
  input [4:1] a, b;
  input cin;
  output [4:1] sum;
  output cout;
  wire [4:1] a, b;
  wire cin;
  wire [4:1] sum;
  wire cout;
  wire w1, w2, w3;
  FullAdder_44 FA_0(.a (a[1]), .b (b[1]), .cin (cin), .sum (sum[1]),
       .cout (w1));
  FullAdder_45 FA_1(.a (a[2]), .b (b[2]), .cin (w1), .sum (sum[2]),
       .cout (w2));
  FullAdder_46 FA_2(.a (a[3]), .b (b[3]), .cin (w2), .sum (sum[3]),
       .cout (w3));
  FullAdder_47 FA_3(.a (a[4]), .b (b[4]), .cin (w3), .sum (sum[4]),
       .cout (cout));
endmodule

module Bit16Adder_2(a, b, cin, sum, cout);
  input [16:1] a, b;
  input cin;
  output [16:1] sum;
  output cout;
  wire [16:1] a, b;
  wire cin;
  wire [16:1] sum;
  wire cout;
  wire w1, w2, w3;
  Bit4Adder_8 B4A_0(.a (a[4:1]), .b (b[4:1]), .cin (cin), .sum
       (sum[4:1]), .cout (w1));
  Bit4Adder_9 B4A_1(.a (a[8:5]), .b (b[8:5]), .cin (w1), .sum
       (sum[8:5]), .cout (w2));
  Bit4Adder_10 B4A_2(.a (a[12:9]), .b (b[12:9]), .cin (w2), .sum
       (sum[12:9]), .cout (w3));
  Bit4Adder_11 B4A_3(.a (a[16:13]), .b (b[16:13]), .cin (w3), .sum
       (sum[16:13]), .cout (cout));
endmodule

module FullAdder_48(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_49(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_50(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_51(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module Bit4Adder_12(a, b, cin, sum, cout);
  input [4:1] a, b;
  input cin;
  output [4:1] sum;
  output cout;
  wire [4:1] a, b;
  wire cin;
  wire [4:1] sum;
  wire cout;
  wire w1, w2, w3;
  FullAdder_48 FA_0(.a (a[1]), .b (b[1]), .cin (cin), .sum (sum[1]),
       .cout (w1));
  FullAdder_49 FA_1(.a (a[2]), .b (b[2]), .cin (w1), .sum (sum[2]),
       .cout (w2));
  FullAdder_50 FA_2(.a (a[3]), .b (b[3]), .cin (w2), .sum (sum[3]),
       .cout (w3));
  FullAdder_51 FA_3(.a (a[4]), .b (b[4]), .cin (w3), .sum (sum[4]),
       .cout (cout));
endmodule

module FullAdder_52(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_53(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_54(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_55(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module Bit4Adder_13(a, b, cin, sum, cout);
  input [4:1] a, b;
  input cin;
  output [4:1] sum;
  output cout;
  wire [4:1] a, b;
  wire cin;
  wire [4:1] sum;
  wire cout;
  wire w1, w2, w3;
  FullAdder_52 FA_0(.a (a[1]), .b (b[1]), .cin (cin), .sum (sum[1]),
       .cout (w1));
  FullAdder_53 FA_1(.a (a[2]), .b (b[2]), .cin (w1), .sum (sum[2]),
       .cout (w2));
  FullAdder_54 FA_2(.a (a[3]), .b (b[3]), .cin (w2), .sum (sum[3]),
       .cout (w3));
  FullAdder_55 FA_3(.a (a[4]), .b (b[4]), .cin (w3), .sum (sum[4]),
       .cout (cout));
endmodule

module FullAdder_56(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D1BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_57(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_58(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_59(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0, n_1;
  AO22D4BWP g33(.A1 (cin), .A2 (n_1), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (n_0), .A2 (n_1), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_1));
  BUFFD0BWP fopt(.I (cin), .Z (n_0));
endmodule

module Bit4Adder_14(a, b, cin, sum, cout);
  input [4:1] a, b;
  input cin;
  output [4:1] sum;
  output cout;
  wire [4:1] a, b;
  wire cin;
  wire [4:1] sum;
  wire cout;
  wire w1, w2, w3;
  FullAdder_56 FA_0(.a (a[1]), .b (b[1]), .cin (cin), .sum (sum[1]),
       .cout (w1));
  FullAdder_57 FA_1(.a (a[2]), .b (b[2]), .cin (w1), .sum (sum[2]),
       .cout (w2));
  FullAdder_58 FA_2(.a (a[3]), .b (b[3]), .cin (w2), .sum (sum[3]),
       .cout (w3));
  FullAdder_59 FA_3(.a (a[4]), .b (b[4]), .cin (w3), .sum (sum[4]),
       .cout (cout));
endmodule

module FullAdder_60(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0, n_1;
  AO22D4BWP g33(.A1 (cin), .A2 (n_1), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (n_0), .A2 (n_1), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_1));
  BUFFD0BWP fopt(.I (cin), .Z (n_0));
endmodule

module FullAdder_61(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D4BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D1BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module FullAdder_62(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0, n_1;
  AO22D4BWP g33(.A1 (cin), .A2 (n_1), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D0BWP g34(.A1 (n_0), .A2 (n_1), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_1));
  BUFFD0BWP fopt(.I (cin), .Z (n_0));
endmodule

module FullAdder_63(a, b, cin, sum, cout);
  input a, b, cin;
  output sum, cout;
  wire a, b, cin;
  wire sum, cout;
  wire n_0;
  AO22D0BWP g33(.A1 (cin), .A2 (n_0), .B1 (a), .B2 (b), .Z (cout));
  CKXOR2D2BWP g34(.A1 (cin), .A2 (n_0), .Z (sum));
  XOR2D1BWP g35(.A1 (a), .A2 (b), .Z (n_0));
endmodule

module Bit4Adder_15(a, b, cin, sum, cout);
  input [4:1] a, b;
  input cin;
  output [4:1] sum;
  output cout;
  wire [4:1] a, b;
  wire cin;
  wire [4:1] sum;
  wire cout;
  wire w1, w2, w3;
  FullAdder_60 FA_0(.a (a[1]), .b (b[1]), .cin (cin), .sum (sum[1]),
       .cout (w1));
  FullAdder_61 FA_1(.a (a[2]), .b (b[2]), .cin (w1), .sum (sum[2]),
       .cout (w2));
  FullAdder_62 FA_2(.a (a[3]), .b (b[3]), .cin (w2), .sum (sum[3]),
       .cout (w3));
  FullAdder_63 FA_3(.a (a[4]), .b (b[4]), .cin (w3), .sum (sum[4]),
       .cout (cout));
endmodule

module Bit16Adder_3(a, b, cin, sum, cout);
  input [16:1] a, b;
  input cin;
  output [16:1] sum;
  output cout;
  wire [16:1] a, b;
  wire cin;
  wire [16:1] sum;
  wire cout;
  wire w1, w2, w3;
  Bit4Adder_12 B4A_0(.a (a[4:1]), .b (b[4:1]), .cin (cin), .sum
       (sum[4:1]), .cout (w1));
  Bit4Adder_13 B4A_1(.a (a[8:5]), .b (b[8:5]), .cin (w1), .sum
       (sum[8:5]), .cout (w2));
  Bit4Adder_14 B4A_2(.a (a[12:9]), .b (b[12:9]), .cin (w2), .sum
       (sum[12:9]), .cout (w3));
  Bit4Adder_15 B4A_3(.a (a[16:13]), .b (b[16:13]), .cin (w3), .sum
       (sum[16:13]), .cout (cout));
endmodule

module Bit64Adder(a, b, cin, sum, cout);
  input [64:1] a, b;
  input cin;
  output [64:1] sum;
  output cout;
  wire [64:1] a, b;
  wire cin;
  wire [64:1] sum;
  wire cout;
  wire w1, w2, w3;
  Bit16Adder B16A_0(a[16:1], b[16:1], cin, sum[16:1], w1);
  Bit16Adder_1 B16A_1(a[32:17], b[32:17], w1, sum[32:17], w2);
  Bit16Adder_2 B16A_2(a[48:33], b[48:33], w2, sum[48:33], w3);
  Bit16Adder_3 B16A_3(a[64:49], b[64:49], w3, sum[64:49], cout);
endmodule

